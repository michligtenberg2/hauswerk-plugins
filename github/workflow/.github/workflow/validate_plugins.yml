name: Valideer en Genereer Plugin Store

on:
  push:
    paths:
      - 'unofficial/*.zip'
      - '.github/workflows/validate_plugins.yml'

jobs:
  validate-and-generate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Zorg dat plugins.json geldig is
        run: python -m json.tool plugins.json > /dev/null

      - name: Controleer alle .zip-bestanden
        run: |
          for f in unofficial/*.zip; do
            unzip -l "$f" | grep -q 'plugin.json' || { echo "$f mist plugin.json"; exit 1; }
          done

      - name: Genereer unofficial/plugins.json automatisch
        run: |
          echo "[" > unofficial/plugins.json
          first=1
          for f in unofficial/*.zip; do
            name=$(basename "$f" .zip)
            url="https://github.com/michligtenberg2/Hauswerk_Plugins/raw/main/unofficial/$name.zip"
            preview="https://raw.githubusercontent.com/michligtenberg2/Hauswerk_Plugins/main/unofficial/$name/preview.png"
            unzip -p "$f" plugin.json > tmp.json
            entry=$(jq -r '.entry' tmp.json)
            cls=$(jq -r '.class' tmp.json)
            tags=$(jq -c '.tags // []' tmp.json)
            icon=$(jq -r '.icon // "icon.svg"' tmp.json)

            [ $first -eq 0 ] && echo "," >> unofficial/plugins.json
            echo "  {"name": "${name^}", "entry": "$entry", "class": "$cls", "icon": "$icon", "tags": $tags, "zip_url": "$url", "preview": "$preview", "verified": false}" >> unofficial/plugins.json
            first=0
          done
          echo "]" >> unofficial/plugins.json

      - name: Commit en push unofficial/plugins.json
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add unofficial/plugins.json
          git commit -m "ðŸ”„ Auto-update unofficial/plugins.json"
          git push || echo "Geen wijzigingen om te pushen"
